// {{ ansible_managed }}
{% import 'item_definitions.j2' as definitions %}

/*
 * Defines a global zone for distributed setups with masters,
 * satellites and clients.
 * This is required to sync configuration commands,
 * templates, apply rules, etc. to satellite and clients.
 * All nodes require the same configuration and must
 * have `accept_config` enabled in the `api` feature.
 */

object Zone "global-templates" {
  global = true
}

/*
 * Defines a global zone for the Icinga Director.
 * This is required to sync configuration commands,
 * templates, apply rules, etc. to satellite and clients.
 * All nodes require the same configuration and must
 * have `accept_config` enabled in the `api` feature.
 */

object Zone "director-global" {
  global = true
}

{#
 # Create Endpoints for all the nodes in our parent Zone
 #}
{% for item in i2_parent_nodes -%}
{{ definitions.endpoint(item, inventory_hostname, hostvars) }}

{% endfor -%}

{#
 # Create Endpoints for all the nodes in our Zone
 #}
{% for item in i2_peer_nodes -%}
{{ definitions.endpoint(item, inventory_hostname, hostvars) }}

{% endfor -%}

{% if inventory_hostname in groups[i2_master_group] %}
{#
 # Create Endpoints for all the nodes in child Zones
 #}
{% for item in i2_child_nodes -%}
{{ definitions.endpoint(item, inventory_hostname, hostvars) }}

{% endfor -%}
{% endif -%}

{#
 # The parent Zone of the current node
 #}
{% if i2_parent_zone is defined -%}
{{ definitions.zone(i2_parent_zone, '', hostvars) }}

{% endif -%}{#
 # The Zone of the current node
 #}
{{ definitions.zone(i2_zonename, i2_parent_zone|default(''), hostvars) }}

{% if inventory_hostname in groups[i2_master_group] %}
{#
 # The child Zones of the current node
 #}
{% for child_zone in i2_child_zones -%}
{{ definitions.zone(child_zone, i2_zonename, hostvars) }}

{% endfor -%}
{% endif %}
