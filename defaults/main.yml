---
i2_manage_repository: yes
i2_manage_package: yes
i2_manage_service: yes
i2_manage_firewall: yes
i2_apt_key: "https://packages.icinga.com/icinga.key"
i2_apt_url: "deb http://packages.icinga.com/{{ ansible_lsb.id|lower }} icinga-{{ ansible_distribution_release }} main"
i2_yum_key: "https://packages.icinga.com/icinga.key"
i2_yum_url: "http://packages.icinga.com/epel/$releasever/release/"
i2_keep_backups: yes
i2_confd:
  - "conf.d"
i2_include_plugins:
  - "itl"
  - "plugins"
  - "plugins-contrib"
  - "manubulon"
  - "windows-plugins"
  - "nscp"
i2_custom_constants: {}
i2_custom_features: {}
i2_custom_scripts: []

i2_custom_templates: {}
i2_custom_objects: {}
i2_custom_apply_rules: {}

i2_custom_global_templates: {}
i2_custom_global_objects: {}
i2_custom_global_apply_rules: {}

i2_remove_unmanaged_features: no
i2_remove_unmanaged_objects: no
i2_remove_unmanaged_objects_in_zone: no

i2_master: no
i2_satellite: no
i2_api_port: 5665
i2_connection_direction: 'top-down'

i2_hostname: "{{ ansible_fqdn }}"
i2_zonename: "{{ ansible_fqdn }}"

i2_satellite_group: satellites
i2_master_group: masters
i2_agent_group: agents

i2_ca_path: /var/lib/icinga2/ca
i2_pki_path: /var/lib/icinga2/certs
i2_certificate_signed_by_ca: no

i2_zones_dir: "{{ i2_conf_dir }}/zones.d"
i2_global_dir: "{{ i2_zones_dir }}/global-templates"

# IDO
i2_setup_ido: no
i2_ido_params:
  database: icinga
  user: icinga
  password: icinga

## Icingaweb2 settings
# Note that database user and password cannot be
# identical to the ones used for IDO or the mysql_user
# command will override that access.
i2_setup_webui: no
i2_webui_php_all: no
i2_webui_modules_dir: "/usr/share/icingaweb2/modules"
i2_timezone: "UTC"
i2_webui_modules:
  - name: cube
    version: v1.1.0
  - name: map
    version: v1.1.0
    repo: https://github.com/nbuchwitz/icingaweb2-module-map.git
  - name: toplevelview
    version: v0.3.1
  - name: ipl
    version: v0.4.0
  - name: businessprocess
    version: v2.2.0
i2_webui_params:
  database: icingaweb
  user: icingaweb
  password: icingaweb
# If the Icingaweb2 will not run on the same machine as the icinga2 master,
# supply the hosts's hostname or IP here to allow access from that host
# to the MySQL-compatible database. The default is to use "localhost"
# and connect through a unix socket.
# But you could also use an ansible_fact, such as
# {{ ansible_facts.default_ipv4.address }}
i2_webui_connectfrom:
  - localhost
i2_webui_user: "www-data" # fixme this is httpd on RedHat
i2_webui_group: icingaweb2
i2_webui_admins: []

i2_webui_default_config:
  authenticate:
    file: authentication.ini
    sections:
      icingaweb2:
        backend: db
        resource: icingaweb_db
  config:
    file: config.ini
    sections:
      global:
        show_stacktraces: "0"
        show_application_state_messages: "1"
        config_backend: db
        config_resource: icingaweb_db
      logging:
        log: syslog
        level: ERROR
        application: icingaweb2
        facility: user
  groups:
    file: groups.ini
    sections:
      icingaweb2:
        backend: db
        resource: icingaweb_db
  resources:
    file: resources.ini
    sections:
      icingaweb_db:
        type: db
        db: mysql
        host: "{{ i2_webui_params.host|default('localhost') }}"
        port: "{{ i2_webui_params.port|default(omit) }}"
        dbname: "{{ i2_webui_params.database }}"
        username: "{{ i2_webui_params.user }}"
        password: "{{ i2_webui_params.password }}"
        charset: utf8
        use_ssl: "0"
      icinga_ido:
        type: db
        db: mysql
        host: "{{ i2_ido_params.host|default('localhost') }}"
        port: "{{ i2_ido_params.port|default(omit) }}"
        dbname: "{{ i2_ido_params.database }}"
        username: "{{ i2_ido_params.user }}"
        password: "{{ i2_ido_params.password }}"
        charset: utf8
        use_ssl: "0"
  roles:
    file: roles.ini
    sections:
      Administrators:
        users: "{{ i2_webui_admins|join(',') }}"
        permissions: "*"
        groups: Administrators
  modules_monitoring_backends:
    file: modules/monitoring/backends.ini
    sections:
      icinga:
        type: ido
        resource: icinga_ido
  modules_monitoring_commandtransports:
    file: modules/monitoring/commandtransports.ini
    sections:
      icinga2:
        transport: api
        host: "{{ i2_api_host }}"
        port: "{{ i2_api_port }}"
        username: "{{ i2_api_webui_user }}"
        password: "{{ i2_api_webui_password }}"
  modules_monitoring_config:
    file: modules/monitoring/config.ini
    sections:
      security:
        protected_customvars: "*pw*,*pass*,community"
i2_webui_default_module_config:
  director:
    resources:
      sections:
        director_db:
          type: db
          db: mysql
          host: "{{ i2_director_params.host|default('localhost') }}"
          port: ""
          dbname: "{{ i2_director_params.database }}"
          username: "{{ i2_director_params.user }}"
          password: "{{ i2_director_params.password }}"
          charset: utf8
          use_ssl: "0"
    modules_director_config:
      file: modules/director/config.ini
      sections:
        db:
          resource: director_db
    modules_director_kickstart:
      file: modules/director/kickstart.ini
      sections:
        config:
          endpoint: "{{ i2_hostname }}"
          username: director
          password: "{{ i2_api_director_password }}"
i2_webui_custom_config: {}
i2_webui_config: "{{ i2_webui_default_config|combine(i2_webui_custom_config, recursive=True) }}"

